version: '3.8'

services:
  voice-agent:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - RETELL_API_KEY=${RETELL_API_KEY}
      - RETELL_AGENT_ID=${RETELL_AGENT_ID}
      - INTAKEQ_API_KEY=${INTAKEQ_API_KEY}
      - INTAKEQ_BASE_URL=${INTAKEQ_BASE_URL}
      - INTAKEQ_CLINIC_ID=${INTAKEQ_CLINIC_ID}
      - AVAILITY_API_KEY=${AVAILITY_API_KEY}
      - AVAILITY_SECRET=${AVAILITY_SECRET}
      - AVAILITY_BASE_URL=${AVAILITY_BASE_URL}
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - PRACTICE_NAME=${PRACTICE_NAME}
      - PRACTICE_ADDRESS=${PRACTICE_ADDRESS}
      - PRACTICE_PHONE=${PRACTICE_PHONE}
      - PRACTICE_EMAIL=${PRACTICE_EMAIL}
      - PROVIDER_SCHEDULES=${PROVIDER_SCHEDULES}
      - LUNCH_BREAK_START=${LUNCH_BREAK_START}
      - LUNCH_BREAK_END=${LUNCH_BREAK_END}
      - ACCEPTED_INSURANCE=${ACCEPTED_INSURANCE}
      - APPOINTMENT_TYPES=${APPOINTMENT_TYPES}
      - LOG_LEVEL=info
      - AUDIT_LOG_ENABLED=true
      - DATA_RETENTION_DAYS=2555
    depends_on:
      - redis
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - voice-agent
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  redis_data:
  prometheus_data:
  grafana_data:
